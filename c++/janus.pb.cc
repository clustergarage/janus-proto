// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: janus.proto

#include "janus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_janus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_janus_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JanusGuardSubject_TagsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_janus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JanusGuardSubject;
}  // namespace protobuf_janus_2eproto
namespace janus {
class JanusdConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JanusdConfig>
      _instance;
} _JanusdConfig_default_instance_;
class JanusGuardSubject_TagsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JanusGuardSubject_TagsEntry_DoNotUse>
      _instance;
} _JanusGuardSubject_TagsEntry_DoNotUse_default_instance_;
class JanusGuardSubjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JanusGuardSubject>
      _instance;
} _JanusGuardSubject_default_instance_;
class JanusdHandleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JanusdHandle>
      _instance;
} _JanusdHandle_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
}  // namespace janus
namespace protobuf_janus_2eproto {
static void InitDefaultsJanusdConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::janus::_JanusdConfig_default_instance_;
    new (ptr) ::janus::JanusdConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::janus::JanusdConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JanusdConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJanusdConfig}, {
      &protobuf_janus_2eproto::scc_info_JanusGuardSubject.base,}};

static void InitDefaultsJanusGuardSubject_TagsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::janus::_JanusGuardSubject_TagsEntry_DoNotUse_default_instance_;
    new (ptr) ::janus::JanusGuardSubject_TagsEntry_DoNotUse();
  }
  ::janus::JanusGuardSubject_TagsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JanusGuardSubject_TagsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJanusGuardSubject_TagsEntry_DoNotUse}, {}};

static void InitDefaultsJanusGuardSubject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::janus::_JanusGuardSubject_default_instance_;
    new (ptr) ::janus::JanusGuardSubject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::janus::JanusGuardSubject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JanusGuardSubject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJanusGuardSubject}, {
      &protobuf_janus_2eproto::scc_info_JanusGuardSubject_TagsEntry_DoNotUse.base,}};

static void InitDefaultsJanusdHandle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::janus::_JanusdHandle_default_instance_;
    new (ptr) ::janus::JanusdHandle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::janus::JanusdHandle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JanusdHandle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJanusdHandle}, {}};

static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::janus::_Empty_default_instance_;
    new (ptr) ::janus::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::janus::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_JanusdConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JanusGuardSubject_TagsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JanusGuardSubject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JanusdHandle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdConfig, nodename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdConfig, podname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdConfig, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdConfig, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdConfig, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdConfig, logformat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject_TagsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject_TagsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject, allow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject, deny_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject, onlydir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject, autoallowowner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject, audit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusGuardSubject, tags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdHandle, nodename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdHandle, podname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdHandle, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::JanusdHandle, processeventfd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::janus::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::janus::JanusdConfig)},
  { 12, 19, sizeof(::janus::JanusGuardSubject_TagsEntry_DoNotUse)},
  { 21, -1, sizeof(::janus::JanusGuardSubject)},
  { 33, -1, sizeof(::janus::JanusdHandle)},
  { 42, -1, sizeof(::janus::Empty)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::janus::_JanusdConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::janus::_JanusGuardSubject_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::janus::_JanusGuardSubject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::janus::_JanusdHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::janus::_Empty_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "janus.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013janus.proto\022\005janus\"\227\001\n\014JanusdConfig\022\014\n"
      "\004name\030\001 \001(\t\022\020\n\010nodeName\030\002 \001(\t\022\017\n\007podName"
      "\030\003 \001(\t\022\013\n\003pid\030\004 \003(\005\022\013\n\003cid\030\005 \003(\t\022)\n\007subj"
      "ect\030\006 \003(\0132\030.janus.JanusGuardSubject\022\021\n\tl"
      "ogFormat\030\007 \001(\t\"\326\001\n\021JanusGuardSubject\022\r\n\005"
      "allow\030\001 \003(\t\022\014\n\004deny\030\002 \003(\t\022\r\n\005event\030\003 \003(\t"
      "\022\017\n\007onlyDir\030\004 \001(\010\022\026\n\016autoAllowOwner\030\005 \001("
      "\010\022\r\n\005audit\030\006 \001(\010\0220\n\004tags\030\007 \003(\0132\".janus.J"
      "anusGuardSubject.TagsEntry\032+\n\tTagsEntry\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"V\n\014Janus"
      "dHandle\022\020\n\010nodeName\030\001 \001(\t\022\017\n\007podName\030\002 \001"
      "(\t\022\013\n\003pid\030\003 \003(\005\022\026\n\016processEventfd\030\004 \003(\005\""
      "\007\n\005Empty2\260\001\n\006Janusd\0229\n\013CreateGuard\022\023.jan"
      "us.JanusdConfig\032\023.janus.JanusdHandle\"\000\0223"
      "\n\014DestroyGuard\022\023.janus.JanusdConfig\032\014.ja"
      "nus.Empty\"\000\0226\n\rGetGuardState\022\014.janus.Emp"
      "ty\032\023.janus.JanusdHandle\"\0000\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 675);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "janus.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_janus_2eproto
namespace janus {

// ===================================================================

void JanusdConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JanusdConfig::kNameFieldNumber;
const int JanusdConfig::kNodeNameFieldNumber;
const int JanusdConfig::kPodNameFieldNumber;
const int JanusdConfig::kPidFieldNumber;
const int JanusdConfig::kCidFieldNumber;
const int JanusdConfig::kSubjectFieldNumber;
const int JanusdConfig::kLogFormatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JanusdConfig::JanusdConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_janus_2eproto::scc_info_JanusdConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:janus.JanusdConfig)
}
JanusdConfig::JanusdConfig(const JanusdConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pid_(from.pid_),
      cid_(from.cid_),
      subject_(from.subject_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.podname().size() > 0) {
    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  logformat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logformat().size() > 0) {
    logformat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logformat_);
  }
  // @@protoc_insertion_point(copy_constructor:janus.JanusdConfig)
}

void JanusdConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

JanusdConfig::~JanusdConfig() {
  // @@protoc_insertion_point(destructor:janus.JanusdConfig)
  SharedDtor();
}

void JanusdConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JanusdConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JanusdConfig::descriptor() {
  ::protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JanusdConfig& JanusdConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_janus_2eproto::scc_info_JanusdConfig.base);
  return *internal_default_instance();
}


void JanusdConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:janus.JanusdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.Clear();
  cid_.Clear();
  subject_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool JanusdConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:janus.JanusdConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusdConfig.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nodeName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusdConfig.nodeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string podName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_podname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->podname().data(), static_cast<int>(this->podname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusdConfig.podName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 pid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_pid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cid(this->cid_size() - 1).data(),
            static_cast<int>(this->cid(this->cid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusdConfig.cid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .janus.JanusGuardSubject subject = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logFormat = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logformat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logformat().data(), static_cast<int>(this->logformat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusdConfig.logFormat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:janus.JanusdConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:janus.JanusdConfig)
  return false;
#undef DO_
}

void JanusdConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:janus.JanusdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string nodeName = 2;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.nodeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // string podName = 3;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.podName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->podname(), output);
  }

  // repeated int32 pid = 4;
  if (this->pid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pid_cached_byte_size_));
  }
  for (int i = 0, n = this->pid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pid(i), output);
  }

  // repeated string cid = 5;
  for (int i = 0, n = this->cid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cid(i).data(), static_cast<int>(this->cid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.cid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->cid(i), output);
  }

  // repeated .janus.JanusGuardSubject subject = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subject_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->subject(static_cast<int>(i)),
      output);
  }

  // string logFormat = 7;
  if (this->logformat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logformat().data(), static_cast<int>(this->logformat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.logFormat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->logformat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:janus.JanusdConfig)
}

::google::protobuf::uint8* JanusdConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:janus.JanusdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string nodeName = 2;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.nodeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // string podName = 3;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.podName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->podname(), target);
  }

  // repeated int32 pid = 4;
  if (this->pid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pid_, target);
  }

  // repeated string cid = 5;
  for (int i = 0, n = this->cid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cid(i).data(), static_cast<int>(this->cid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.cid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->cid(i), target);
  }

  // repeated .janus.JanusGuardSubject subject = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subject_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->subject(static_cast<int>(i)), deterministic, target);
  }

  // string logFormat = 7;
  if (this->logformat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logformat().data(), static_cast<int>(this->logformat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdConfig.logFormat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->logformat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:janus.JanusdConfig)
  return target;
}

size_t JanusdConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:janus.JanusdConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 pid = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->pid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string cid = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cid_size());
  for (int i = 0, n = this->cid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cid(i));
  }

  // repeated .janus.JanusGuardSubject subject = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->subject_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subject(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string nodeName = 2;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  // string podName = 3;
  if (this->podname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->podname());
  }

  // string logFormat = 7;
  if (this->logformat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logformat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JanusdConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:janus.JanusdConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const JanusdConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JanusdConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:janus.JanusdConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:janus.JanusdConfig)
    MergeFrom(*source);
  }
}

void JanusdConfig::MergeFrom(const JanusdConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:janus.JanusdConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pid_.MergeFrom(from.pid_);
  cid_.MergeFrom(from.cid_);
  subject_.MergeFrom(from.subject_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  if (from.podname().size() > 0) {

    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  if (from.logformat().size() > 0) {

    logformat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logformat_);
  }
}

void JanusdConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:janus.JanusdConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JanusdConfig::CopyFrom(const JanusdConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:janus.JanusdConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JanusdConfig::IsInitialized() const {
  return true;
}

void JanusdConfig::Swap(JanusdConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JanusdConfig::InternalSwap(JanusdConfig* other) {
  using std::swap;
  pid_.InternalSwap(&other->pid_);
  cid_.InternalSwap(CastToBase(&other->cid_));
  CastToBase(&subject_)->InternalSwap(CastToBase(&other->subject_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nodename_.Swap(&other->nodename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  podname_.Swap(&other->podname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logformat_.Swap(&other->logformat_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JanusdConfig::GetMetadata() const {
  protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

JanusGuardSubject_TagsEntry_DoNotUse::JanusGuardSubject_TagsEntry_DoNotUse() {}
JanusGuardSubject_TagsEntry_DoNotUse::JanusGuardSubject_TagsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void JanusGuardSubject_TagsEntry_DoNotUse::MergeFrom(const JanusGuardSubject_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata JanusGuardSubject_TagsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[1];
}
void JanusGuardSubject_TagsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void JanusGuardSubject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JanusGuardSubject::kAllowFieldNumber;
const int JanusGuardSubject::kDenyFieldNumber;
const int JanusGuardSubject::kEventFieldNumber;
const int JanusGuardSubject::kOnlyDirFieldNumber;
const int JanusGuardSubject::kAutoAllowOwnerFieldNumber;
const int JanusGuardSubject::kAuditFieldNumber;
const int JanusGuardSubject::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JanusGuardSubject::JanusGuardSubject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_janus_2eproto::scc_info_JanusGuardSubject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:janus.JanusGuardSubject)
}
JanusGuardSubject::JanusGuardSubject(const JanusGuardSubject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allow_(from.allow_),
      deny_(from.deny_),
      event_(from.event_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  ::memcpy(&onlydir_, &from.onlydir_,
    static_cast<size_t>(reinterpret_cast<char*>(&audit_) -
    reinterpret_cast<char*>(&onlydir_)) + sizeof(audit_));
  // @@protoc_insertion_point(copy_constructor:janus.JanusGuardSubject)
}

void JanusGuardSubject::SharedCtor() {
  ::memset(&onlydir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audit_) -
      reinterpret_cast<char*>(&onlydir_)) + sizeof(audit_));
}

JanusGuardSubject::~JanusGuardSubject() {
  // @@protoc_insertion_point(destructor:janus.JanusGuardSubject)
  SharedDtor();
}

void JanusGuardSubject::SharedDtor() {
}

void JanusGuardSubject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JanusGuardSubject::descriptor() {
  ::protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JanusGuardSubject& JanusGuardSubject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_janus_2eproto::scc_info_JanusGuardSubject.base);
  return *internal_default_instance();
}


void JanusGuardSubject::Clear() {
// @@protoc_insertion_point(message_clear_start:janus.JanusGuardSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allow_.Clear();
  deny_.Clear();
  event_.Clear();
  tags_.Clear();
  ::memset(&onlydir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audit_) -
      reinterpret_cast<char*>(&onlydir_)) + sizeof(audit_));
  _internal_metadata_.Clear();
}

bool JanusGuardSubject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:janus.JanusGuardSubject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string allow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allow()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allow(this->allow_size() - 1).data(),
            static_cast<int>(this->allow(this->allow_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusGuardSubject.allow"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string deny = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_deny()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deny(this->deny_size() - 1).data(),
            static_cast<int>(this->deny(this->deny_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusGuardSubject.deny"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string event = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_event()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event(this->event_size() - 1).data(),
            static_cast<int>(this->event(this->event_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusGuardSubject.event"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool onlyDir = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &onlydir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool autoAllowOwner = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autoallowowner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool audit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &audit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          JanusGuardSubject_TagsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              JanusGuardSubject_TagsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&tags_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusGuardSubject.TagsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusGuardSubject.TagsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:janus.JanusGuardSubject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:janus.JanusGuardSubject)
  return false;
#undef DO_
}

void JanusGuardSubject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:janus.JanusGuardSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allow = 1;
  for (int i = 0, n = this->allow_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allow(i).data(), static_cast<int>(this->allow(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusGuardSubject.allow");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->allow(i), output);
  }

  // repeated string deny = 2;
  for (int i = 0, n = this->deny_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deny(i).data(), static_cast<int>(this->deny(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusGuardSubject.deny");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->deny(i), output);
  }

  // repeated string event = 3;
  for (int i = 0, n = this->event_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event(i).data(), static_cast<int>(this->event(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusGuardSubject.event");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->event(i), output);
  }

  // bool onlyDir = 4;
  if (this->onlydir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->onlydir(), output);
  }

  // bool autoAllowOwner = 5;
  if (this->autoallowowner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->autoallowowner(), output);
  }

  // bool audit = 6;
  if (this->audit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->audit(), output);
  }

  // map<string, string> tags = 7;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "janus.JanusGuardSubject.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "janus.JanusGuardSubject.TagsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<JanusGuardSubject_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<JanusGuardSubject_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:janus.JanusGuardSubject)
}

::google::protobuf::uint8* JanusGuardSubject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:janus.JanusGuardSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allow = 1;
  for (int i = 0, n = this->allow_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allow(i).data(), static_cast<int>(this->allow(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusGuardSubject.allow");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->allow(i), target);
  }

  // repeated string deny = 2;
  for (int i = 0, n = this->deny_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deny(i).data(), static_cast<int>(this->deny(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusGuardSubject.deny");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->deny(i), target);
  }

  // repeated string event = 3;
  for (int i = 0, n = this->event_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event(i).data(), static_cast<int>(this->event(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusGuardSubject.event");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->event(i), target);
  }

  // bool onlyDir = 4;
  if (this->onlydir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->onlydir(), target);
  }

  // bool autoAllowOwner = 5;
  if (this->autoallowowner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->autoallowowner(), target);
  }

  // bool audit = 6;
  if (this->audit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->audit(), target);
  }

  // map<string, string> tags = 7;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "janus.JanusGuardSubject.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "janus.JanusGuardSubject.TagsEntry.value");
      }
    };

    if (deterministic &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<JanusGuardSubject_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<JanusGuardSubject_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:janus.JanusGuardSubject)
  return target;
}

size_t JanusGuardSubject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:janus.JanusGuardSubject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string allow = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allow_size());
  for (int i = 0, n = this->allow_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allow(i));
  }

  // repeated string deny = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->deny_size());
  for (int i = 0, n = this->deny_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->deny(i));
  }

  // repeated string event = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->event_size());
  for (int i = 0, n = this->event_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->event(i));
  }

  // map<string, string> tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  {
    ::std::unique_ptr<JanusGuardSubject_TagsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->tags().begin();
        it != this->tags().end(); ++it) {
      entry.reset(tags_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bool onlyDir = 4;
  if (this->onlydir() != 0) {
    total_size += 1 + 1;
  }

  // bool autoAllowOwner = 5;
  if (this->autoallowowner() != 0) {
    total_size += 1 + 1;
  }

  // bool audit = 6;
  if (this->audit() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JanusGuardSubject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:janus.JanusGuardSubject)
  GOOGLE_DCHECK_NE(&from, this);
  const JanusGuardSubject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JanusGuardSubject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:janus.JanusGuardSubject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:janus.JanusGuardSubject)
    MergeFrom(*source);
  }
}

void JanusGuardSubject::MergeFrom(const JanusGuardSubject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:janus.JanusGuardSubject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allow_.MergeFrom(from.allow_);
  deny_.MergeFrom(from.deny_);
  event_.MergeFrom(from.event_);
  tags_.MergeFrom(from.tags_);
  if (from.onlydir() != 0) {
    set_onlydir(from.onlydir());
  }
  if (from.autoallowowner() != 0) {
    set_autoallowowner(from.autoallowowner());
  }
  if (from.audit() != 0) {
    set_audit(from.audit());
  }
}

void JanusGuardSubject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:janus.JanusGuardSubject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JanusGuardSubject::CopyFrom(const JanusGuardSubject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:janus.JanusGuardSubject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JanusGuardSubject::IsInitialized() const {
  return true;
}

void JanusGuardSubject::Swap(JanusGuardSubject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JanusGuardSubject::InternalSwap(JanusGuardSubject* other) {
  using std::swap;
  allow_.InternalSwap(CastToBase(&other->allow_));
  deny_.InternalSwap(CastToBase(&other->deny_));
  event_.InternalSwap(CastToBase(&other->event_));
  tags_.Swap(&other->tags_);
  swap(onlydir_, other->onlydir_);
  swap(autoallowowner_, other->autoallowowner_);
  swap(audit_, other->audit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JanusGuardSubject::GetMetadata() const {
  protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JanusdHandle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JanusdHandle::kNodeNameFieldNumber;
const int JanusdHandle::kPodNameFieldNumber;
const int JanusdHandle::kPidFieldNumber;
const int JanusdHandle::kProcessEventfdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JanusdHandle::JanusdHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_janus_2eproto::scc_info_JanusdHandle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:janus.JanusdHandle)
}
JanusdHandle::JanusdHandle(const JanusdHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pid_(from.pid_),
      processeventfd_(from.processeventfd_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.podname().size() > 0) {
    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  // @@protoc_insertion_point(copy_constructor:janus.JanusdHandle)
}

void JanusdHandle::SharedCtor() {
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

JanusdHandle::~JanusdHandle() {
  // @@protoc_insertion_point(destructor:janus.JanusdHandle)
  SharedDtor();
}

void JanusdHandle::SharedDtor() {
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JanusdHandle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JanusdHandle::descriptor() {
  ::protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JanusdHandle& JanusdHandle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_janus_2eproto::scc_info_JanusdHandle.base);
  return *internal_default_instance();
}


void JanusdHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:janus.JanusdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.Clear();
  processeventfd_.Clear();
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool JanusdHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:janus.JanusdHandle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nodeName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusdHandle.nodeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string podName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_podname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->podname().data(), static_cast<int>(this->podname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "janus.JanusdHandle.podName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_pid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 processEventfd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_processeventfd())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_processeventfd())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:janus.JanusdHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:janus.JanusdHandle)
  return false;
#undef DO_
}

void JanusdHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:janus.JanusdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdHandle.nodeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nodename(), output);
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdHandle.podName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->podname(), output);
  }

  // repeated int32 pid = 3;
  if (this->pid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pid_cached_byte_size_));
  }
  for (int i = 0, n = this->pid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pid(i), output);
  }

  // repeated int32 processEventfd = 4;
  if (this->processeventfd_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _processeventfd_cached_byte_size_));
  }
  for (int i = 0, n = this->processeventfd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->processeventfd(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:janus.JanusdHandle)
}

::google::protobuf::uint8* JanusdHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:janus.JanusdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdHandle.nodeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nodename(), target);
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "janus.JanusdHandle.podName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->podname(), target);
  }

  // repeated int32 pid = 3;
  if (this->pid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pid_, target);
  }

  // repeated int32 processEventfd = 4;
  if (this->processeventfd_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _processeventfd_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->processeventfd_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:janus.JanusdHandle)
  return target;
}

size_t JanusdHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:janus.JanusdHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 pid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->pid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 processEventfd = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->processeventfd_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _processeventfd_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->podname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JanusdHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:janus.JanusdHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const JanusdHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JanusdHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:janus.JanusdHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:janus.JanusdHandle)
    MergeFrom(*source);
  }
}

void JanusdHandle::MergeFrom(const JanusdHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:janus.JanusdHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pid_.MergeFrom(from.pid_);
  processeventfd_.MergeFrom(from.processeventfd_);
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  if (from.podname().size() > 0) {

    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
}

void JanusdHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:janus.JanusdHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JanusdHandle::CopyFrom(const JanusdHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:janus.JanusdHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JanusdHandle::IsInitialized() const {
  return true;
}

void JanusdHandle::Swap(JanusdHandle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JanusdHandle::InternalSwap(JanusdHandle* other) {
  using std::swap;
  pid_.InternalSwap(&other->pid_);
  processeventfd_.InternalSwap(&other->processeventfd_);
  nodename_.Swap(&other->nodename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  podname_.Swap(&other->podname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JanusdHandle::GetMetadata() const {
  protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_janus_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:janus.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:janus.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:janus.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_janus_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:janus.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:janus.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:janus.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:janus.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:janus.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:janus.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:janus.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:janus.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:janus.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:janus.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:janus.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:janus.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:janus.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:janus.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:janus.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_janus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_janus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace janus
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::janus::JanusdConfig* Arena::CreateMaybeMessage< ::janus::JanusdConfig >(Arena* arena) {
  return Arena::CreateInternal< ::janus::JanusdConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::janus::JanusGuardSubject_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::janus::JanusGuardSubject_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::janus::JanusGuardSubject_TagsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::janus::JanusGuardSubject* Arena::CreateMaybeMessage< ::janus::JanusGuardSubject >(Arena* arena) {
  return Arena::CreateInternal< ::janus::JanusGuardSubject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::janus::JanusdHandle* Arena::CreateMaybeMessage< ::janus::JanusdHandle >(Arena* arena) {
  return Arena::CreateInternal< ::janus::JanusdHandle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::janus::Empty* Arena::CreateMaybeMessage< ::janus::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::janus::Empty >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
